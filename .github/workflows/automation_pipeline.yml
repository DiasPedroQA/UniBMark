name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  checkout:
    name: Checkout do Código
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Exibir estrutura do projeto
        run: |
          pwd
          tree -L 3

  setup-python:
    name: Configurar Python
    runs-on: ubuntu-22.04
    needs: checkout

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Verificar versões do Python e Pip
        run: |
          python --version
          pip --version

      - name: Configurar ambiente virtual e instalar dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 black mypy pylint coverage pytest-cov || echo "Erro ao instalar dependências"
          echo "Dependências instaladas com sucesso"

      - name: Validar dependências instaladas
        run: |
          python -m venv venv
          source venv/bin/activate
          pip freeze

  lint:
    name: Verificar Código (Linting)
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Verificar formatação com Black
        run: |
          python -m venv venv
          source venv/bin/activate
          black --check . || echo "Erros de formatação encontrados"
          flake8 . || echo "Erros de estilo encontrados"
          mypy src/ || echo "Erros de tipagem encontrados"
          pylint src/ || echo "Erros de estilo encontrados"

  test:
    name: Executar Testes Unitários (Pytest)
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar ambiente virtual e instalar dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install pytest pytest-cov
          pip freeze > requirements.txt
          pip install -r requirements.txt

      - name: Executar testes com Pytest
        run: |
          python -m venv venv
          source venv/bin/activate
          pytest tests/ --junitxml=report.xml --cov=src --cov-report=xml --cov-report=term

      - name: Verificar a existência do arquivo de relatório
        run: |
          if [ ! -f report.xml ]; then
            echo "Erro: report.xml não foi gerado."
            exit 1
          fi
          if [ ! -f coverage.xml ]; then
            echo "Erro: coverage.xml não foi gerado."
            exit 1
          fi

      - name: Armazenar Relatório Localmente
        run: |
          mkdir -p artifacts/reports
          mv report.xml artifacts/reports/
          mv coverage.xml artifacts/reports/

  post-deployment:
    name: Pós-Implantação (Verificações Finais)
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Verificar a versão do Python novamente após os testes
        run: |
          python --version

      - name: Realizar verificações de permissões e integridade
        run: |
          ls -ld venv
          ls -l artifacts/reports/report.xml
          ls -l artifacts/reports/coverage.xml
