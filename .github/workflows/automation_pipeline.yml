name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  checkout:
    name: Checkout do Código
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Exibir estrutura do projeto
        run: |
          pwd
          tree -L 3

  setup-python:
    name: Configurar Python
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configurar ambiente virtual e instalar dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "Ambiente virtual criado e ativado"
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 black mypy coverage

  lint:
    name: Análise de Código (Flake8)
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Verificar estrutura de diretórios
        run: |
          echo "Estrutura de diretórios do repositório"
          tree -L 2

      - name: Verificar linting com Flake8
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "Ambiente virtual criado e ativado"
          flake8 . --count --show-source --statistics

  format:
    name: Verificar Formatação (Black)
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Verificar formatação com Black
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "Ambiente virtual criado e ativado"
          black --check .

  type-check:
    name: Análise Estática (MyPy)
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Verificar tipagem com MyPy
        run: |
          source venv/bin/activate
          mypy ./src

  test:
    name: Executar Testes Unitários (Pytest)
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Executar testes com Pytest
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "Ambiente virtual criado e ativado"
          pytest tests/ --junitxml=report.xml --cov=src --cov-report=xml --cov-report=term

  publish-report:
    name: Publicar Relatórios de Testes
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Publicar Relatórios de Testes
        uses: actions/upload-artifact@v3
        with:
          name: pytest-report
          path: report.xml

      - name: Publicar Relatório de Cobertura
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
