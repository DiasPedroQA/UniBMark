name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  checkout:
    name: Checkout do Código
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Exibir estrutura do projeto
        run: |
          pwd
          tree -L 3

  setup-python:
    name: Configurar Python
    runs-on: ubuntu-22.04  # Usando Ubuntu 22.04
    needs: checkout
  
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
  
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use uma versão compatível
  
      - name: Adicionar repositório do iovisor
        run: |
          echo "deb [trusted=yes] https://repo.iovisor.org/apt/$(lsb_release -cs) $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/iovisor.list
          sudo apt-get update
  
      - name: Instalar dependências do sistema
        run: |
          sudo apt-get install -y bcc-tools libbcc-examples
  
      - name: Configurar ambiente virtual e instalar dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "Ambiente virtual criado e ativado"
          pip install --upgrade pip
          pip install -r requirements.txt || echo "Ignorando erros de instalação..."
          pip install pytest flake8 black mypy coverage pytest-cov || echo "Ignorando erros de instalação..."
          echo "Dependências instaladas com sucesso"

  format:
    name: Verificar Formatação (Black)
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Verificar formatação com Black
        run: |
          source venv/bin/activate
          echo "Ambiente virtual ativado"
          black --check .

  test:
    name: Executar Testes Unitários (Pytest)
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar ambiente virtual e instalar dependências
        run: |
          source venv/bin/activate
          echo "Ambiente virtual ativado"
          pip install -r requirements.txt || echo "Ignorando erros de instalação..."
          pip install pytest pytest-cov || echo "Ignorando erros de instalação..."

      - name: Executar testes com Pytest
        run: |
          source venv/bin/activate
          echo "Ambiente virtual ativado"
          pytest tests/ --junitxml=report.xml --cov=src --cov-report=xml --cov-report=term

  publish-report:
    name: Publicar Relatórios de Testes
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Publicar Relatórios de Testes
        uses: actions/upload-artifact@v3
        with:
          name: pytest-report
          path: report.xml

      - name: Publicar Relatório de Cobertura
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
